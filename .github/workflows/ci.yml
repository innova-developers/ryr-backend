name: CI-InnovaDevelopers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, mysql, intl
          coverage: none
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction
      - name: Cache vendor
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

  tests:
    name: Application Tests
    runs-on: ubuntu-latest
    needs: dependencies
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uroot -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --tmpfs /var/lib/mysql:rw,noexec,nosuid,size=600m
        volumes:
          - ./my.cnf:/etc/mysql/conf.d/my.cnf
    steps:
      - uses: actions/checkout@v2
      - name: Restore vendor
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction
      - name: Copy .env
        run: cp .env.example .env
      - name: Setup environment
        run: |
          echo "DB_HOST=mysql" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=test_db" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env
      - name: Generate APP_KEY
        run: php artisan key:generate
      - name: Set Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Install MySQL Client
        run: sudo apt-get update && sudo apt-get install -y mysql-client
      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -u"root" -p"password" --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL (attempt $i)..."
            sleep 2
          done
      - name: Test MySQL connection
        run: mysql -h 127.0.0.1 -u root -ppassword -e "SHOW DATABASES;"
      - name: Run Migrations
        run: php artisan migrate --force
      - name: Run Tests
        run: php artisan test

  static_analysis:
    name: Static Analysis (PHPStan)
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Restore vendor
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction
      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse

  code_format:
    name: Code Format (PHP-CS-Fixer)
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Restore vendor
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction
      - name: Run PHP-CS-Fixer and auto-fix
        run: ./vendor/bin/php-cs-fixer fix --diff
